import { useState, useRef, useEffect, useContext } from "react";
import { Send, Loader, ImageOff } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card } from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { toast } from "sonner";
import { sendChatMessage, getChatRoomHistory, saveChatHistory } from "../frontend/api";
import { createContext } from "react";
import { useChats } from "@/hooks/useChats";
import { useParams } from "react-router-dom";

interface Message {
  type: "user" | "assistant";
  content: string;
  timestamp: Date;
  properties?: Array<Record<string, string>>;
}

interface ConsultationStyle {
  id: string;
  name: string;
  description: string;
  emojis: string[];
  phrases: {
    greeting: string[];
    positive: string[];
    neutral: string[];
    negative: string[];
    closing: string[];
  };
}

const consultationStyles: Record<string, ConsultationStyle> = {
  formal: {
    id: "formal",
    name: "‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£",
    description: "‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÅ‡∏ö‡∏ö‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û",
    emojis: ["üè¢", "üìä", "‚úì"],
    phrases: {
      greeting: [
        "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞",
        "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏î‡πâ‡∏≤‡∏ô‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå",
        "‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤"
      ],
      positive: [
        "‡∏Ç‡∏≠‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô",
        "‡∏ó‡∏≤‡∏á‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡πà‡∏≤‡∏ô",
        "‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô"
      ],
      neutral: [
        "‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°",
        "‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ",
        "‡∏Ç‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°"
      ],
      negative: [
        "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ó‡∏≤‡∏á‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
        "‡∏Ç‡∏≠‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ‡∏ó‡∏£‡∏≤‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö",
        "‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å"
      ],
      closing: [
        "‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏™‡∏á‡∏™‡∏±‡∏¢‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏î ‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤",
        "‡∏ó‡∏≤‡∏á‡πÄ‡∏£‡∏≤‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡πà‡∏≤‡∏ô‡πÄ‡∏™‡∏°‡∏≠",
        "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤"
      ]
    }
  },
  casual: {
    id: "casual",
    name: "‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ",
    description: "‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÅ‡∏ö‡∏ö‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û",
    emojis: ["üè†", "üëç", "üí¨"],
    phrases: {
      greeting: [
        "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏´‡∏°",
        "‡πÄ‡∏Æ‡πâ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏î‡πâ‡∏≤‡∏ô‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏Ø ‡∏ö‡πâ‡∏≤‡∏á",
        "‡∏ß‡πà‡∏≤‡πÑ‡∏á‡∏Ñ‡∏£‡∏±‡∏ö ‡∏™‡∏ô‡πÉ‡∏à‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏Ø ‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô‡∏≠‡∏¢‡∏π‡πà"
      ],
      positive: [
        "‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏µ‡πÜ ‡∏°‡∏≤‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥",
        "‡∏ô‡∏µ‡πà‡πÄ‡∏•‡∏¢ ‡∏•‡∏≠‡∏á‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏ô‡∏µ‡πâ‡∏™‡∏¥ ‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÉ‡∏à",
        "‡∏°‡∏µ‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏Ø ‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡∏ï‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢"
      ],
      neutral: [
        "‡∏•‡∏≠‡∏á‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ß‡∏Å‡∏ô‡∏µ‡πâ‡∏Å‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏°",
        "‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö",
        "‡∏•‡∏≠‡∏á‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏î‡∏π‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏ß‡∏Å‡∏ô‡∏µ‡πâ"
      ],
      negative: [
        "‡πÇ‡∏≠‡πâ ‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏≠‡∏î‡∏µ",
        "‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏ô‡∏∞ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
        "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏õ‡πä‡∏∞ ‡∏•‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°"
      ],
      closing: [
        "‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏™‡∏á‡∏™‡∏±‡∏¢‡∏Å‡πá‡∏ñ‡∏≤‡∏°‡∏°‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞",
        "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡πá‡∏ö‡∏≠‡∏Å‡πÑ‡∏î‡πâ",
        "‡∏¢‡∏±‡∏á‡πÑ‡∏á‡∏Å‡πá‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î"
      ]
    }
  },
  friendly: {
    id: "friendly",
    name: "‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á",
    description: "‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÅ‡∏ö‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô",
    emojis: ["üòä", "üè°", "üíï", "‚ú®"],
    phrases: {
      greeting: [
        "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏≤‡∏≤~ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ö‡πâ‡∏≤‡∏á‡∏Ñ‡∏∞",
        "‡∏ß‡πà‡∏≤‡πÑ‡∏á‡∏Ñ‡∏∞ ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô‡πÄ‡∏≠‡πà‡∏¢",
        "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏à‡πâ‡∏≤~ ‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏Ø ‡∏ö‡πâ‡∏≤‡∏á‡∏Ñ‡∏∞"
      ],
      positive: [
        "‡πÄ‡∏à‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡∏•‡πà‡∏∞! ‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡πÜ ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞",
        "‡πÇ‡∏≠‡πâ‡πÇ‡∏´! ‡∏î‡∏π‡∏ô‡∏µ‡πà‡∏™‡∏¥‡∏Ñ‡∏∞ ‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô",
        "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏∞! ‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏µ‡πÜ ‡∏°‡∏≤‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏•‡∏¢"
      ],
      neutral: [
        "‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏•‡∏≠‡∏á‡∏î‡∏π‡∏Å‡∏±‡∏ô‡πÑ‡∏´‡∏°",
        "‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡πÄ‡∏•‡∏¢",
        "‡∏ô‡∏µ‡πà‡∏Ñ‡πà‡∏∞ ‡∏•‡∏≠‡∏á‡∏î‡∏π‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏ß‡∏Å‡∏ô‡∏µ‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞"
      ],
      negative: [
        "‡∏≠‡∏∏‡πä‡∏¢! ‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏≠‡∏î‡∏µ‡πÄ‡∏•‡∏¢",
        "‡πÅ‡∏¢‡πà‡∏à‡∏±‡∏á~ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞",
        "‡πÇ‡∏≠‡πä‡∏∞! ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏≤‡∏°‡∏´‡∏≤‡πÄ‡∏•‡∏¢ ‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡∏π‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞"
      ],
      closing: [
        "‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏Å‡πá‡∏ñ‡∏≤‡∏°‡∏°‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏™‡∏°‡∏≠‡∏Ñ‡πà‡∏∞",
        "‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏™‡∏á‡∏™‡∏±‡∏¢‡∏≠‡∏∞‡πÑ‡∏£ ‡∏ó‡∏±‡∏Å‡∏°‡∏≤‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞",
        "‡πÅ‡∏ß‡∏∞‡∏°‡∏≤‡∏Ñ‡∏∏‡∏¢‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡πâ‡∏≤~"
      ]
    }
  },
  professional: {
    id: "professional",
    name: "‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û",
    description: "‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÅ‡∏ö‡∏ö‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å",
    emojis: ["üìà", "üîç", "üìë", "üíº"],
    phrases: {
      greeting: [
        "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏°‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏î‡πâ‡∏≤‡∏ô‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÅ‡∏ö‡∏ö‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û",
        "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πâ‡∏ß‡∏≤‡∏á‡πÉ‡∏à‡πÉ‡∏ô‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤",
        "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
      ],
      positive: [
        "‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏•‡∏≤‡∏î‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ‡∏ú‡∏°‡∏Ç‡∏≠‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏±‡∏î‡∏™‡∏£‡∏£‡πÅ‡∏•‡πâ‡∏ß‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ",
        "‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡∏ú‡∏°‡πÑ‡∏î‡πâ‡∏Ñ‡∏±‡∏î‡∏™‡∏£‡∏£‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ",
        "‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏ß‡πà‡∏≤ 10 ‡∏õ‡∏µ‡πÉ‡∏ô‡∏ß‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå ‡∏ú‡∏°‡∏Ç‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ"
      ],
      neutral: [
        "‡∏ú‡∏°‡∏Ç‡∏≠‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
        "‡πÇ‡∏õ‡∏£‡∏î‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏ã‡∏∂‡πà‡∏á‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß‡πÅ‡∏•‡πâ‡∏ß",
        "‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏•‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÄ‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á ‡∏ú‡∏°‡∏Ç‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏®‡∏±‡∏Å‡∏¢‡∏†‡∏≤‡∏û‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ"
      ],
      negative: [
        "‡∏ú‡∏°‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ‡∏ó‡∏£‡∏≤‡∏ö‡∏ß‡πà‡∏≤ ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö",
        "‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ‡∏ú‡∏°‡∏û‡∏ö‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
        "‡∏ú‡∏°‡∏Ç‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏ó‡∏£‡∏≤‡∏ö‡∏ß‡πà‡∏≤ ‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤"
      ],
      closing: [
        "‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏™‡∏ô‡πÉ‡∏à‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏ú‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì",
        "‡∏ú‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏•‡∏≤‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î",
        "‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏≤ ‡∏ú‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏∏‡∏ì‡∏´‡∏≤‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ"
      ]
    }
  }
};

const consultationStylesEnglish = {
  formal: {
    greeting: [
      "Welcome to our service.",
      "Hello, I'm pleased to provide real estate consulting services.",
      "Thank you for using our service."
    ],
    positive: [
      "I would like to present information that matches your requirements.",
      "We have interesting real estate information for you.",
      "Based on an analysis of your needs."
    ],
    neutral: [
      "I would like to present additional information.",
      "You may consider the following options.",
      "I would like to suggest suitable alternatives."
    ],
    negative: [
      "I apologize, we could not find information that matches your requirements.",
      "I would like to inform you that there is currently no information in the system.",
      "I apologize for the inconvenience."
    ],
    closing: [
      "If you have any questions, you can ask for more information at any time.",
      "We are always pleased to be of service.",
      "Thank you for using our service."
    ]
  },
  casual: {
    greeting: [
      "Hi there, how can I help?",
      "Hey, what can I help you with in real estate?",
      "What's up? What kind of property are you interested in?"
    ],
    positive: [
      "We have some great options to recommend.",
      "Here you go, take a look at this one, you might like it.",
      "Here are some interesting properties."
    ],
    neutral: [
      "Want to check out this information first?",
      "We have several options for you to look at.",
      "Take a look at these alternatives."
    ],
    negative: [
      "Oh, it looks like we don't have the information you need.",
      "Sorry, we don't have the information you're looking for right now.",
      "Haven't found an exact match yet. Could you try asking again?"
    ],
    closing: [
      "If you have any questions, just ask.",
      "Let me know if you need anything else.",
      "Feel free to contact me anytime."
    ]
  },
  friendly: {
    greeting: [
      "Hello there~! How can I help you today?",
      "Hey! What kind of home are you looking for today?",
      "Hi there~! What would you like to know about real estate?"
    ],
    positive: [
      "Found it! I have something really interesting for you!",
      "Wow! Look at this one, you're going to love it!",
      "Congratulations! I have some great options to recommend!"
    ],
    neutral: [
      "We have lots of options for you! Want to take a look?",
      "Let me find some for you! There are so many styles!",
      "Here you go! Check out these options first!"
    ],
    negative: [
      "Oops! Sorry, I don't have any matches for what you're looking for right now!",
      "Oh no~ There's no information in our system yet!",
      "Oh! I haven't found what you're looking for yet. Maybe try a different search term?"
    ],
    closing: [
      "If you want to know anything else, just ask! Always happy to help!",
      "If you have any other questions, message me anytime!",
      "Feel free to chat again anytime! Happy to give advice~!"
    ]
  },
  professional: {
    greeting: [
      "Hello, I'm pleased to provide professional real estate consultation.",
      "Thank you for trusting our services.",
      "Hello, I'm ready to provide recommendations and analyze real estate that suits your specific needs."
    ],
    positive: [
      "Based on the latest real estate market analysis, I would like to present the following carefully selected options.",
      "After thoroughly analyzing your requirements, I have curated a list of real estate properties that meet your criteria as follows.",
      "With over 10 years of experience in the real estate industry, I would like to recommend the following investment-worthy options."
    ],
    neutral: [
      "I would like to present in-depth information to assist with your decision-making process.",
      "Please consider these options, which have been evaluated for quality and long-term value.",
      "Based on market research and location analysis, I would like to suggest the following high-potential options."
    ],
    negative: [
      "I must inform you that currently there are no properties in our system that meet your quality criteria and requirements.",
      "After checking our latest database, I found that there are no properties that match your specific needs.",
      "I would like to inform you that, based on your specified conditions, there are no properties that meet our standard criteria."
    ],
    closing: [
      "If you are interested in more in-depth information, I am ready to provide consultation and prepare additional details for you.",
      "I am ready to provide further advice on investment, asset management, or the latest market data.",
      "With our team's expertise, I am confident that we can help you find real estate that meets your requirements."
    ]
  }
};

const StyleContext = createContext({
  consultationStyle: "formal",
  setConsultationStyle: (style: string) => {},
  language: "thai",
  setLanguage: (lang: string) => {}
});

// Export the StyleContext so it can be imported in other files
export { StyleContext };

export const StyleProvider = ({ children }) => {
  const [consultationStyle, setConsultationStyle] = useState<string>("formal");
  const [language, setLanguage] = useState<string>("thai");
  
  useEffect(() => {
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ style ‡πÅ‡∏•‡∏∞ language ‡∏à‡∏≤‡∏Å localStorage ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡πÇ‡∏´‡∏•‡∏î
    const savedStyle = localStorage.getItem("consultationStyle");
    if (savedStyle) {
      setConsultationStyle(savedStyle);
    }
    
    const savedLanguage = localStorage.getItem("language");
    if (savedLanguage) {
      setLanguage(savedLanguage);
    }
  }, []);
  
  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á style
  const handleStyleChange = (style: string) => {
    setConsultationStyle(style);
    localStorage.setItem("consultationStyle", style);
  };
  
  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á language
  const handleLanguageChange = (lang: string) => {
    setLanguage(lang);
    localStorage.setItem("language", lang);
  };
  
  return (
    <StyleContext.Provider value={{ 
      consultationStyle, 
      setConsultationStyle: handleStyleChange,
      language,
      setLanguage: handleLanguageChange
    }}>
      {children}
    </StyleContext.Provider>
  );
};

export default function ChatInterface() {
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputValue, setInputValue] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [chatRoomId, setChatRoomId] = useState<string | null>(null);
  const [isNewChat, setIsNewChat] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const { consultationStyle, language } = useContext(StyleContext);
  const { currentChatId, getChatSession, addMessageToChat } = useChats();
  const { id: chatIdFromUrl } = useParams();

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  // ‡πÄ‡∏û‡∏¥‡πà‡∏° useEffect ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠ language ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
  useEffect(() => {
    console.log("‡∏Ñ‡πà‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:", language);
    console.log("‡∏Ñ‡πà‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡πÉ‡∏ô localStorage:", localStorage.getItem("language"));
    
    // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á reload ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢
    if (messages.length === 1 && messages[0].type === "assistant") {
      setMessages([{
        type: "assistant",
        content: translate(welcomeMessage.thai, welcomeMessage.english, language),
        timestamp: new Date(),
      }]);
    }
  }, [language]);

  useEffect(() => {
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î chatRoomId ‡∏à‡∏≤‡∏Å URL params ‡∏´‡∏£‡∏∑‡∏≠ currentChatId ‡∏à‡∏≤‡∏Å useChats
    const roomId = chatIdFromUrl || currentChatId || localStorage.getItem("chatRoomId");
    
    if (roomId) {
      setChatRoomId(roomId);
      localStorage.setItem("chatRoomId", roomId);
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const chatSession = getChatSession(roomId);
      if (chatSession) {
        const isNewlyCreated = Date.now() - chatSession.createdAt < 5000; // 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        setIsNewChat(isNewlyCreated && chatSession.messages.length === 0);
      }
      
      // ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á
      loadChatRoomHistory(roomId);
      console.log("‡πÇ‡∏´‡∏•‡∏î‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏ô‡∏ó‡∏ô‡∏≤:", roomId);
    }
  }, [chatIdFromUrl, currentChatId]);

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const translate = (thai: string, english: string, language?: string): string => {
    return language === "thai" ? thai : english;
  };

  // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
  const welcomeMessage = {
    thai: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà Property AI Guru! ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö",
    english: "Hello! Welcome to Property AI Guru! You can ask any questions about real estate."
  };

  const errorMessages = {
    loadHistoryFailed: {
      thai: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤",
      english: "Failed to load chat history"
    },
    serverError: {
      thai: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
      english: "Error connecting to server. Please try again."
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á
  const loadChatRoomHistory = async (roomId: string) => {
    try {
      console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏ô‡∏ó‡∏ô‡∏≤:", roomId);
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô local state (useChats) ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const chatSession = getChatSession(roomId);
      
      if (chatSession && chatSession.messages.length > 0) {
        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô local state ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡πâ‡∏ô
        const formattedMessages = chatSession.messages.map(msg => ({
          type: msg.role === "user" ? "user" : "assistant",
          content: msg.content,
          timestamp: new Date(msg.timestamp),
          properties: msg.properties || []
        } as Message));
        
        console.log("‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏ô‡∏ó‡∏ô‡∏≤:", formattedMessages.length);
        // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô set messages ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏ï‡∏¥‡∏°‡∏à‡∏≤‡∏Å messages[0]
        setMessages(formattedMessages.length > 0 ? formattedMessages : [
          {
            type: "assistant",
            content: translate(welcomeMessage.thai, welcomeMessage.english, language),
            timestamp: new Date(),
          }
        ]);
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ä‡∏ó‡πÄ‡∏Å‡πà‡∏≤
        if (!isNewChat) {
          toast.info(translate(
            `‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ (${formattedMessages.length} ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)`, 
            `Loaded chat history (${formattedMessages.length} messages)`,
            language
          ));
        }
      } else {
        // ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å API ‡∏Å‡πà‡∏≠‡∏ô ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ backend ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
        try {
          const historyFromApi = await getChatRoomHistory(roomId);
          if (historyFromApi && historyFromApi.messages && historyFromApi.messages.length > 0) {
            const formattedMessages = historyFromApi.messages.map(msg => ({
              type: msg.role === "user" ? "user" : "assistant",
              content: msg.content,
              timestamp: new Date(msg.timestamp),
              properties: msg.properties || []
            } as Message));
            
            console.log("‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å API ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", formattedMessages.length, "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°");
            setMessages(formattedMessages);
            toast.info(translate(
              `‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå (${formattedMessages.length} ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)`,
              `Loaded chat history from server (${formattedMessages.length} messages)`,
              language
            ));
            return;
          }
        } catch (apiError) {
          console.warn("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å API ‡πÑ‡∏î‡πâ:", apiError);
          // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á error ‡∏´‡∏£‡∏∑‡∏≠ toast ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏à‡∏∞‡πÉ‡∏ä‡πâ local fallback
        }
        
        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó ‡πÉ‡∏´‡πâ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        console.log("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÉ‡∏´‡∏°‡πà");
        setMessages([
          {
            type: "assistant",
            content: translate(welcomeMessage.thai, welcomeMessage.english, language),
            timestamp: new Date(),
          }
        ]);
        
        // ‡πÅ‡∏™‡∏î‡∏á toast ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ isNewChat
        if (isNewChat) {
          toast.success(translate(
            "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
            "New chat room created successfully",
            language
          ));
        }
      }
    } catch (error) {
      console.error("Error loading chat history:", error);
      // ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
      setMessages([
        {
          type: "assistant",
          content: translate(welcomeMessage.thai, welcomeMessage.english, language),
          timestamp: new Date(),
        }
      ]);
      toast.error(translate(
        errorMessages.loadHistoryFailed.thai,
        errorMessages.loadHistoryFailed.english,
        language
      ));
    }
  };

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  // Function to get a random phrase from the selected style
  const getRandomPhrase = (category: 'greeting' | 'positive' | 'neutral' | 'negative' | 'closing') => {
    const style = consultationStyles[consultationStyle];
    const styleEnglish = consultationStylesEnglish[consultationStyle as keyof typeof consultationStylesEnglish];
    
    const phrases = style.phrases[category];
    const phrasesEnglish = styleEnglish[category];
    
    const randomIndex = Math.floor(Math.random() * phrases.length);
    
    return language === 'thai' ? phrases[randomIndex] : phrasesEnglish[randomIndex];
  };

  // Function to get random emojis for the selected style
  const getRandomEmoji = () => {
    const style = consultationStyles[consultationStyle];
    return style.emojis[Math.floor(Math.random() * style.emojis.length)];
  };

  // Function to enhance property descriptions based on consultation style
  const enhancePropertyDescription = (property: Record<string, string>) => {
    const style = consultationStyles[consultationStyle];
    const emoji = getRandomEmoji();
    
    let enhancedDescription = '';
    
    // Add style-based intro
    const positivePhrase = getRandomPhrase('positive');
    enhancedDescription += `${positivePhrase}\n\n`;
    
    // Format the property information in a more natural way
    if (property["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"] && property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"]) {
      if (consultationStyle === 'formal') {
        enhancedDescription += language === 'thai' 
          ? `${emoji} ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó${property["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"]} ‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£${property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"]}`
          : `${emoji} Property type: ${property["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"]} under the ${property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"]} project`;
      } else if (consultationStyle === 'casual') {
        enhancedDescription += language === 'thai'
          ? `${emoji} ‡πÄ‡∏õ‡πá‡∏ô${property["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"]}‡πÉ‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£${property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"]}`
          : `${emoji} This is a ${property["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"]} in the ${property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"]} project`;
      } else if (consultationStyle === 'friendly') {
        enhancedDescription += language === 'thai'
          ? `${emoji} ‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞! ${property["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"]}‡∏™‡∏ß‡∏¢‡πÜ ‡πÉ‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£${property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"]}`
          : `${emoji} This is so exciting! A beautiful ${property["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"]} in the ${property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"]} project`;
      } else if (consultationStyle === 'professional') {
        enhancedDescription += language === 'thai'
          ? `${emoji} ‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó${property["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"]} ‡πÉ‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏≠‡∏¢‡πà‡∏≤‡∏á${property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"]}`
          : `${emoji} A premium ${property["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"]} real estate in the high-quality ${property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"]} development`;
      }
    }
    
    if (property["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö"]) {
      if (consultationStyle === 'formal') {
        enhancedDescription += language === 'thai'
          ? ` ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö${property["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö"]}`
          : ` Style: ${property["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö"]}`;
      } else if (consultationStyle === 'casual') {
        enhancedDescription += language === 'thai'
          ? ` ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö${property["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö"]}`
          : ` with a ${property["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö"]} style`;
      } else if (consultationStyle === 'friendly') {
        enhancedDescription += language === 'thai'
          ? ` ‡πÅ‡∏ö‡∏ö${property["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö"]} ‡∏™‡∏ß‡∏¢‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞`
          : ` with a gorgeous ${property["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö"]} style!`;
      } else if (consultationStyle === 'professional') {
        enhancedDescription += language === 'thai'
          ? ` ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö${property["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö"]} ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô`
          : ` designed in a standard-compliant ${property["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö"]} style`;
      }
    }
    
    if (property["‡∏£‡∏≤‡∏Ñ‡∏≤"]) {
      if (consultationStyle === 'formal') {
        enhancedDescription += language === 'thai'
          ? ` ‡∏£‡∏≤‡∏Ñ‡∏≤ ${property["‡∏£‡∏≤‡∏Ñ‡∏≤"]} ‡∏ö‡∏≤‡∏ó`
          : ` Price: ${property["‡∏£‡∏≤‡∏Ñ‡∏≤"]} THB`;
      } else if (consultationStyle === 'casual') {
        enhancedDescription += language === 'thai'
          ? ` ‡∏£‡∏≤‡∏Ñ‡∏≤ ${property["‡∏£‡∏≤‡∏Ñ‡∏≤"]} ‡∏ö‡∏≤‡∏ó ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤`
          : ` Price: ${property["‡∏£‡∏≤‡∏Ñ‡∏≤"]} THB, which is good value`;
      } else if (consultationStyle === 'friendly') {
        enhancedDescription += language === 'thai'
          ? ` ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏û‡∏µ‡∏¢‡∏á ${property["‡∏£‡∏≤‡∏Ñ‡∏≤"]} ‡∏ö‡∏≤‡∏ó‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡πà‡∏∞ ‡∏Ñ‡∏∏‡πâ‡∏°‡∏°‡∏≤‡∏Å!`
          : ` Priced at only ${property["‡∏£‡∏≤‡∏Ñ‡∏≤"]} THB! Such great value!`;
      } else if (consultationStyle === 'professional') {
        enhancedDescription += language === 'thai'
          ? ` ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏ó‡∏µ‡πà ${property["‡∏£‡∏≤‡∏Ñ‡∏≤"]} ‡∏ö‡∏≤‡∏ó ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÄ‡∏•`
          : ` Investment value of ${property["‡∏£‡∏≤‡∏Ñ‡∏≤"]} THB, which is appropriate for the quality and location`;
      }
    }
    
    // Add nearby facilities with style-appropriate wording
    const nearbyFacilities = [];
    
    if (property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"] && property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"] !== "‡πÑ‡∏°‡πà‡∏°‡∏µ") {
      if (consultationStyle === 'formal') {
        nearbyFacilities.push(language === 'thai'
          ? `‡πÉ‡∏Å‡∏•‡πâ‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"]}`
          : `near the ${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"]} educational institution`);
      } else if (consultationStyle === 'casual') {
        nearbyFacilities.push(language === 'thai'
          ? `‡πÉ‡∏Å‡∏•‡πâ${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"]} ‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏°‡∏≤‡∏Å`
          : `close to ${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"]}, very convenient`);
      } else if (consultationStyle === 'friendly') {
        nearbyFacilities.push(language === 'thai'
          ? `‡πÉ‡∏Å‡∏•‡πâ${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"]} ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏™‡∏∏‡∏î‡πÜ ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞`
          : `near ${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"]}, super convenient!`);
      } else if (consultationStyle === 'professional') {
        nearbyFacilities.push(language === 'thai'
          ? `‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏±‡∏®‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏à‡∏≤‡∏Å‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ä‡∏±‡πâ‡∏ô‡∏ô‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"]}`
          : `within an appropriate travel radius from leading educational institutions like ${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"]}`);
      }
    }
    
    if (property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"] && property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"] !== "‡πÑ‡∏°‡πà‡∏°‡∏µ") {
      if (consultationStyle === 'formal') {
        nearbyFacilities.push(language === 'thai'
          ? `‡πÉ‡∏Å‡∏•‡πâ‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"]}`
          : `near ${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"]} mass transit station`);
      } else if (consultationStyle === 'casual') {
        nearbyFacilities.push(language === 'thai'
          ? `‡πÄ‡∏î‡∏¥‡∏ô‡∏ñ‡∏∂‡∏á‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"]} ‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡πÄ‡∏•‡∏¢`
          : `easy walking distance to ${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"]} station`);
      } else if (consultationStyle === 'friendly') {
        nearbyFacilities.push(language === 'thai'
          ? `‡πÉ‡∏Å‡∏•‡πâ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"]} ‡πÅ‡∏Ñ‡πà‡πÑ‡∏°‡πà‡∏Å‡∏µ‡πà‡∏Å‡πâ‡∏≤‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏°‡∏≤‡∏Å‡πÜ ‡∏Ñ‡πà‡∏∞`
          : `just steps away from ${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"]} station, so convenient!`);
      } else if (consultationStyle === 'professional') {
        nearbyFacilities.push(language === 'thai'
          ? `‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏≥‡πÄ‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏°‡∏ß‡∏•‡∏ä‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"]}`
          : `offers a strategic location advantage with convenient access to public transportation via ${property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"]} station`);
      }
    }
    
    if (property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] && property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] !== "‡πÑ‡∏°‡πà‡∏°‡∏µ") {
      if (consultationStyle === 'formal') {
        nearbyFacilities.push(language === 'thai'
          ? `‡πÉ‡∏Å‡∏•‡πâ‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤${property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]}`
          : `near ${property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]} shopping mall`);
      } else if (consultationStyle === 'casual') {
        nearbyFacilities.push(language === 'thai'
          ? `‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á‡∏á‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà${property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]} ‡πÉ‡∏Å‡∏•‡πâ‡πÜ ‡πÄ‡∏•‡∏¢`
          : `easy shopping at nearby ${property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]}`);
      } else if (consultationStyle === 'friendly') {
        nearbyFacilities.push(language === 'thai'
          ? `‡πÉ‡∏Å‡∏•‡πâ‡∏´‡πâ‡∏≤‡∏á${property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]} ‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á‡∏™‡∏ö‡∏≤‡∏¢‡πÜ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏Å‡∏•‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞`
          : `near ${property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]} mall, shop easily without traveling far!`);
      } else if (consultationStyle === 'professional') {
        nearbyFacilities.push(language === 'thai'
          ? `‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤${property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]} ‡∏ã‡∏∂‡πà‡∏á‡∏°‡∏µ‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô`
          : `located near ${property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]} shopping center with comprehensive amenities`);
      }
    }
    
    if (property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"] && property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"] !== "‡πÑ‡∏°‡πà‡∏°‡∏µ") {
      if (consultationStyle === 'formal') {
        nearbyFacilities.push(language === 'thai'
          ? `‡πÉ‡∏Å‡∏•‡πâ‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•${property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"]}`
          : `near ${property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"]} Hospital`);
      } else if (consultationStyle === 'casual') {
        nearbyFacilities.push(language === 'thai'
          ? `‡∏°‡∏µ‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•${property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"]} ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÜ ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢`
          : `${property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"]} Hospital is nearby, safe and secure`);
      } else if (consultationStyle === 'friendly') {
        nearbyFacilities.push(language === 'thai'
          ? `‡∏≠‡∏∏‡πà‡∏ô‡πÉ‡∏à‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞ ‡∏°‡∏µ‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•${property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"]} ‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏°‡πà‡πÑ‡∏Å‡∏•`
          : `peace of mind with ${property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"]} Hospital not far away!`);
      } else if (consultationStyle === 'professional') {
        nearbyFacilities.push(language === 'thai'
          ? `‡∏î‡πâ‡∏≤‡∏ô‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏™‡∏∏‡∏Ç ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏±‡∏®‡∏°‡∏µ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏ä‡∏±‡πâ‡∏ô‡∏ô‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á${property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"]}`
          : `for healthcare needs, within the service radius of leading medical facility ${property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"]} Hospital`);
      }
    }
    
    if (nearbyFacilities.length > 0) {
      enhancedDescription += language === 'thai'
        ? `\n\n‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏ó‡∏≥‡πÄ‡∏•‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠ ${nearbyFacilities.join(' ‡πÅ‡∏•‡∏∞')}`
        : `\n\nThe advantages of this location include ${nearbyFacilities.join(' and ')}`;
    }
    
    return enhancedDescription;
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!inputValue.trim()) return;

    // Add user message
    const userMessage: Message = {
      type: "user",
      content: inputValue,
      timestamp: new Date(),
    };

    setMessages((prev) => [...prev, userMessage]);
    setInputValue("");
    setIsLoading(true);

    try {
      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡∏á‡πÉ‡∏ô local state ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
      if (chatRoomId) {
        addMessageToChat(chatRoomId, {
          role: "user",
          content: inputValue,
          timestamp: Date.now()
        });
      }
      
      // Call the backend API
      const response = await sendChatMessage({
        query: inputValue,
        consultation_style: consultationStyle,
        chat_room_id: chatRoomId || undefined,
        language: language
      });
      
      // Save the chat room ID
      if (response.chat_room_id) {
        setChatRoomId(response.chat_room_id);
        localStorage.setItem("chatRoomId", response.chat_room_id);
      } else if (response.session_id) {
        // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà API ‡∏¢‡∏±‡∏á‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°
        const sessionId = response.session_id;
        setChatRoomId(sessionId);
        localStorage.setItem("chatRoomId", sessionId);
      }
      
      // Create enhanced property descriptions if properties exist
      const enhancedResponse = response.response;
      
      // Add AI response to messages
      const assistantMessage: Message = {
        type: "assistant",
        content: enhancedResponse,
        timestamp: new Date(),
        properties: response.properties
      };
      
      setMessages((prev) => [...prev, assistantMessage]);
      
      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° AI ‡∏•‡∏á‡πÉ‡∏ô local state (useChats) ‡∏î‡πâ‡∏ß‡∏¢
      if (chatRoomId) {
        addMessageToChat(chatRoomId, {
          role: "assistant",
          content: enhancedResponse,
          timestamp: Date.now(),
          properties: response.properties
        });
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        const chatSession = getChatSession(chatRoomId);
        if (chatSession) {
          const messagesForDB = chatSession.messages.map(msg => ({
            role: msg.role,
            content: msg.content,
            timestamp: msg.timestamp,
            properties: msg.properties
          }));
          
          console.log(language === 'thai' 
            ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:" 
            : "Saving chat history to database:", chatRoomId, 
            language === 'thai' ? messagesForDB.length + " ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°" : messagesForDB.length + " messages");
          
          // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ setTimeout ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Å‡∏±‡∏ö UX
          setTimeout(async () => {
            try {
              // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡πà‡∏≤‡∏ô API
              const saved = await saveChatHistory(chatRoomId, messagesForDB);
              if (saved) {
                console.log(language === 'thai' ? "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" : "Chat history saved successfully");
              } else {
                console.warn(language === 'thai' 
                  ? "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ" 
                  : "Unable to save chat history to database");
                // ‡πÅ‡∏™‡∏î‡∏á toast ‡πÅ‡∏ö‡∏ö silent ‡πÑ‡∏°‡πà‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
                toast.info(translate(
                  "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå",
                  "Chat history is stored only in your browser",
                  language
                ), {
                  duration: 3000,
                });
              }
            } catch (error) {
              console.error(language === 'thai' 
                ? "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤:" 
                : "Error saving chat history:", error);
              // ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á toast ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
            }
          }, 500); // ‡∏£‡∏≠‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏´‡∏•‡∏±‡∏Å
        }
      }
    } catch (error) {
      console.error("Error sending message:", error);
      toast.error(translate(
        "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
        "Error sending message. Please try again.",
        language
      ));
    } finally {
      setIsLoading(false);
    }
  };

  // Function to handle image loading errors
  const handleImageError = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {
    e.currentTarget.style.display = 'none';
    const errorPlaceholder = e.currentTarget.parentElement?.querySelector('.image-error-placeholder');
    if (errorPlaceholder) {
      errorPlaceholder.classList.remove('hidden');
    }
  };

  // Display property information in a more structured way
  const renderPropertyCard = (property: Record<string, string>, index: number) => {
    const hasImage = property["‡∏£‡∏π‡∏õ"] && property["‡∏£‡∏π‡∏õ"] !== "‡πÑ‡∏°‡πà‡∏°‡∏µ";
    const isEnglish = language === "english";
    
    return (
      <div key={index} className="bg-white dark:bg-slate-800 rounded-lg p-3 mb-2 shadow-sm border border-#43BE98/20">
        {property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"] && (
          <div className="font-medium text-#43BE98">
            {isEnglish ? property["project_en"] || property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"] : property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"]}
          </div>
        )}
        <div className="grid grid-cols-2 gap-2 mt-1 text-sm">
          {property["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"] && (
            <div>
              <span className="text-slate-500">{translate("‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó", "Type", language)}:</span>{" "}
              {isEnglish ? property["type_en"] || property["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"] : property["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"]}
            </div>
          )}
          {property["‡∏£‡∏≤‡∏Ñ‡∏≤"] && (
            <div>
              <span className="text-slate-500">{translate("‡∏£‡∏≤‡∏Ñ‡∏≤", "Price", language)}:</span>{" "}
              {isEnglish ? property["price_en"] || property["‡∏£‡∏≤‡∏Ñ‡∏≤"] : property["‡∏£‡∏≤‡∏Ñ‡∏≤"]} {translate("‡∏ö‡∏≤‡∏ó", "THB", language)}
            </div>
          )}
          {property["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö"] && (
            <div>
              <span className="text-slate-500">{translate("‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö", "Style", language)}:</span>{" "}
              {isEnglish ? property["style_en"] || property["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö"] : property["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö"]}
            </div>
          )}
          {property["‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á"] && property["‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á"] !== "‡πÑ‡∏°‡πà‡∏°‡∏µ" && (
            <div>
              <span className="text-slate-500">{translate("‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á", "Location", language)}:</span>{" "}
              {isEnglish ? property["location_en"] || property["‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á"] : property["‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á"]}
            </div>
          )}
        </div>

        {/* Image section with better error handling */}
        {hasImage && (
          <div className="mt-3 relative rounded-md overflow-hidden bg-gray-100 dark:bg-gray-700 aspect-video">
            <img 
              src={property["‡∏£‡∏π‡∏õ"]} 
              alt={isEnglish ? property["project_en"] || property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"] : property["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"]} 
              className="w-full h-full object-cover transition-opacity duration-300 hover:opacity-95"
              onError={handleImageError}
              loading="lazy"
            />
            <div className="image-error-placeholder hidden absolute inset-0 flex flex-col items-center justify-center text-gray-400">
              <ImageOff className="h-8 w-8 mb-2" />
              <span className="text-xs">{translate("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÑ‡∏î‡πâ", "Could not load image", language)}</span>
            </div>
          </div>
        )}

        {/* Amenities section - showing nearby facilities */}
        <div className="mt-2 text-sm grid grid-cols-2 gap-x-2 gap-y-1">
          {property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"] && property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"] !== "‡πÑ‡∏°‡πà‡∏°‡∏µ" && (
            <div>
              <span className="text-slate-500">{translate("‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤", "Educational Institution", language)}:</span>{" "}
              {isEnglish ? property["educational_institution_en"] || property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"] : property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤"]}
            </div>
          )}
          {property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"] && property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"] !== "‡πÑ‡∏°‡πà‡∏°‡∏µ" && (
            <div>
              <span className="text-slate-500">{translate("‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤", "Mass Transit", language)}:</span>{" "}
              {isEnglish ? property["bts_mrt_station_en"] || property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"] : property["‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏£‡∏ñ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"]}
            </div>
          )}
          {property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] && property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] !== "‡πÑ‡∏°‡πà‡∏°‡∏µ" && (
            <div>
              <span className="text-slate-500">{translate("‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "Shopping Mall", language)}:</span>{" "}
              {isEnglish ? property["shopping_mall_en"] || property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] : property["‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]}
            </div>
          )}
          {property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"] && property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"] !== "‡πÑ‡∏°‡πà‡∏°‡∏µ" && (
            <div>
              <span className="text-slate-500">{translate("‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•", "Hospital", language)}:</span>{" "}
              {isEnglish ? property["hospital_en"] || property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"] : property["‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"]}
            </div>
          )}
        </div>
      </div>
    );
  };

  return (
    <div className="flex flex-col h-[calc(85vh-90px)]">
      <Card className="flex-1 overflow-hidden flex flex-col border-[#43BE98]">
        <div className="flex-1 overflow-y-auto p-4 space-y-4">
          {messages.map((message, index) => (
            <div
              key={index}
              className={`chat-message ${
                message.type === "user" ? "user-message" : "assistant-message"
              }`}
            >
              <div className="flex items-start">
                {message.type === "assistant" && (
                  <div className="mr-2 flex-shrink-0 rounded-full bg-[#43BE98] p-1">
                    <img 
                      src="https://media.istockphoto.com/id/1060696342/vector/robot-icon-chat-bot-sign-for-support-service-concept-chatbot-character-flat-style.jpg?s=612x612&w=0&k=20&c=t9PsSDLowOAhfL1v683JMtWRDdF8w5CFsICqQvEvfzY=" 
                      alt="AI" 
                      className="h-8 w-8 rounded-full" 
                    />
                  </div>
                )}
                <div className="max-w-[85%]">
                  <div className="text-sm font-medium">
                    {message.type === "user" 
                      ? translate("‡∏Ñ‡∏∏‡∏ì", "You", language) 
                      : "Property AI Guru"}
                  </div>
                  <div className="mt-1 whitespace-pre-line">{message.content}</div>
                  
                  {/* Render properties if available */}
                  {message.properties && message.properties.length > 0 && (
                    <div className="mt-3 space-y-2">
                      {message.properties.map((property, propIndex) => 
                        renderPropertyCard(property, propIndex)
                      )}
                    </div>
                  )}
                </div>
              </div>
              <div className="text-xs text-white mt-1 text-right">
                {message.timestamp.toLocaleTimeString()}
              </div>
            </div>
          ))}
          <div ref={messagesEndRef} />
        </div>
        <form onSubmit={handleSubmit} className="p-4 border-t border-#43BE98/20 flex gap-2">
          <Input
            value={inputValue}
            onChange={(e) => setInputValue(e.target.value)}
            placeholder={translate("‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà...", "Type your message here...", language)}
            disabled={isLoading}
            className="flex-1 border-[#43BE98] focus-visible:ring-#43BE98/50"
          />
          <Button 
            type="submit" 
            disabled={isLoading || !inputValue.trim()}
            className="bg-[#43BE98] hover:bg-#43BE98/90"
          >
            {isLoading ? <Loader className="h-4 w-4 animate-spin" /> : <Send className="h-4 w-4" />}
          </Button>
        </form>
      </Card>
    </div>
  );
}
